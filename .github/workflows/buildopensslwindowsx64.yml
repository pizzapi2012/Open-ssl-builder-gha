# This is a basic workflow to help you get started with Actions

name: Build OpenSSL Windows x64

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    permissions:
      packages: write
      contents: write
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1.5.2
        with:
          from-source: false
          platform: win64
          version: 2.16.03
          destination: $HOME/nasm

      - name: Set NASM Path
        shell: cmd
        run: set PATH=%PATH%;$HOME/nasm

      - name: Setup Perl environment
        uses: shogo82148/actions-setup-perl@v1.33.0
  
      - name: Setup MSVC Tools
        shell: pwsh
        run: |
            powershell -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
            choco install visualstudio2022community --package-parameters "--norestart --wait --passive --add Microsoft.VisualStudio.Component.CoreEditor;Microsoft.VisualStudio.Workload.CoreEditor;Microsoft.VisualStudio.Workload.VCTools;includeRecommended;includeOptional"
        
      - name: Download Source
        uses: robinraju/release-downloader@v1.12
        with:
          repository: 'openssl/openssl'
          latest: true
          fileName: "*.tar.gz"
          extract: true

      - name: Build OpenSSL
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
          mkdir out
          cd out
          mkdir openssl
          cd ..
          perl Configure VC-WIN64A --openssldir="%CD%\out\openssl"
          nmake
          nmake test
          nmake install
          powershell Compress-Archive "%CD%\out\openssl" "%CD%\openssl.zip"
          
      - name: Publish Openssl to gh releases
        uses: ncipollo/release-action@v1.16.0
        with:
          artifacts: "openssl.zip"
          body: "Openssl Compiled"
          name: "Openssl"
          tag: "openssl"
          owner: "pizzapi2012"
